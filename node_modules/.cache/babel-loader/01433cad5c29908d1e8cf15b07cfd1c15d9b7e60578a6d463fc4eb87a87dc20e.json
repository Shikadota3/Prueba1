{"ast":null,"code":"var _jsxFileName = \"C:\\\\RAUL\\\\TRABAJOS\\\\Aplicativo Vidawasi v3.0\\\\project\\\\src\\\\components\\\\PatientRecordForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { saveToLocalStorage, getFromLocalStorage } from '../utils/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientRecordForm = ({\n  patient = {}\n}) => {\n  _s();\n  var _getFromLocalStorage;\n  const [patients, setPatients] = useState(getFromLocalStorage('patients') || []);\n  const [formData, setFormData] = useState({\n    id: patient.id || Date.now(),\n    fullName: patient.fullName || '',\n    document: patient.document || '',\n    weight: '',\n    height: '',\n    hemoglobin: '',\n    date: new Date().toISOString().split('T')[0],\n    observations: '',\n    registeredBy: ((_getFromLocalStorage = getFromLocalStorage('currentUser')) === null || _getFromLocalStorage === void 0 ? void 0 : _getFromLocalStorage.email) || 'Sistema'\n  });\n  useEffect(() => {\n    const storedPatients = getFromLocalStorage('patients') || [];\n    setPatients(storedPatients);\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const updatedPatients = patients.some(p => p.id === formData.id) ? patients.map(p => p.id === formData.id ? formData : p) : [...patients, formData];\n    saveToLocalStorage('patients', updatedPatients);\n    setPatients(updatedPatients);\n    alert('Paciente guardado exitosamente');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-6 rounded-lg shadow-md\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientRecordForm, \"awnq1bmaL2n8Qyb/HlFKYXNnnfY=\");\n_c = PatientRecordForm;\nexport default PatientRecordForm;\nvar _c;\n$RefreshReg$(_c, \"PatientRecordForm\");","map":{"version":3,"names":["React","useState","useEffect","saveToLocalStorage","getFromLocalStorage","jsxDEV","_jsxDEV","PatientRecordForm","patient","_s","_getFromLocalStorage","patients","setPatients","formData","setFormData","id","Date","now","fullName","document","weight","height","hemoglobin","date","toISOString","split","observations","registeredBy","email","storedPatients","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","updatedPatients","some","p","map","alert","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/RAUL/TRABAJOS/Aplicativo Vidawasi v3.0/project/src/components/PatientRecordForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { saveToLocalStorage, getFromLocalStorage } from '../utils/storage';\n\nconst PatientRecordForm = ({ patient = {} }) => {\n  const [patients, setPatients] = useState(getFromLocalStorage('patients') || []);\n  const [formData, setFormData] = useState({\n    id: patient.id || Date.now(),\n    fullName: patient.fullName || '',\n    document: patient.document || '',\n    weight: '',\n    height: '',\n    hemoglobin: '',\n    date: new Date().toISOString().split('T')[0],\n    observations: '',\n    registeredBy: getFromLocalStorage('currentUser')?.email || 'Sistema'\n  });\n\n  useEffect(() => {\n    const storedPatients = getFromLocalStorage('patients') || [];\n    setPatients(storedPatients);\n  }, []);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    const updatedPatients = patients.some(p => p.id === formData.id)\n      ? patients.map(p => p.id === formData.id ? formData : p)\n      : [...patients, formData];\n    \n    saveToLocalStorage('patients', updatedPatients);\n    setPatients(updatedPatients);\n    alert('Paciente guardado exitosamente');\n  };\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-md\">\n      {/* ... (resto del formulario se mantiene igual) ... */}\n    </div>\n  );\n};\n\nexport default PatientRecordForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,kBAAkB,EAAEC,mBAAmB,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3E,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,OAAO,GAAG,CAAC;AAAE,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,oBAAA;EAC9C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAACG,mBAAmB,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;EAC/E,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC;IACvCc,EAAE,EAAEP,OAAO,CAACO,EAAE,IAAIC,IAAI,CAACC,GAAG,CAAC,CAAC;IAC5BC,QAAQ,EAAEV,OAAO,CAACU,QAAQ,IAAI,EAAE;IAChCC,QAAQ,EAAEX,OAAO,CAACW,QAAQ,IAAI,EAAE;IAChCC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,EAAE;IACVC,UAAU,EAAE,EAAE;IACdC,IAAI,EAAE,IAAIP,IAAI,CAAC,CAAC,CAACQ,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5CC,YAAY,EAAE,EAAE;IAChBC,YAAY,EAAE,EAAAjB,oBAAA,GAAAN,mBAAmB,CAAC,aAAa,CAAC,cAAAM,oBAAA,uBAAlCA,oBAAA,CAAoCkB,KAAK,KAAI;EAC7D,CAAC,CAAC;EAEF1B,SAAS,CAAC,MAAM;IACd,MAAM2B,cAAc,GAAGzB,mBAAmB,CAAC,UAAU,CAAC,IAAI,EAAE;IAC5DQ,WAAW,CAACiB,cAAc,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCpB,WAAW,CAACqB,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACH,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;EACnD,CAAC;EAED,MAAMG,YAAY,GAAIL,CAAC,IAAK;IAC1BA,CAAC,CAACM,cAAc,CAAC,CAAC;IAElB,MAAMC,eAAe,GAAG3B,QAAQ,CAAC4B,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACzB,EAAE,KAAKF,QAAQ,CAACE,EAAE,CAAC,GAC5DJ,QAAQ,CAAC8B,GAAG,CAACD,CAAC,IAAIA,CAAC,CAACzB,EAAE,KAAKF,QAAQ,CAACE,EAAE,GAAGF,QAAQ,GAAG2B,CAAC,CAAC,GACtD,CAAC,GAAG7B,QAAQ,EAAEE,QAAQ,CAAC;IAE3BV,kBAAkB,CAAC,UAAU,EAAEmC,eAAe,CAAC;IAC/C1B,WAAW,CAAC0B,eAAe,CAAC;IAC5BI,KAAK,CAAC,gCAAgC,CAAC;EACzC,CAAC;EAED,oBACEpC,OAAA;IAAKqC,SAAS,EAAC;EAAmC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE7C,CAAC;AAEV,CAAC;AAACtC,EAAA,CAzCIF,iBAAiB;AAAAyC,EAAA,GAAjBzC,iBAAiB;AA2CvB,eAAeA,iBAAiB;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}