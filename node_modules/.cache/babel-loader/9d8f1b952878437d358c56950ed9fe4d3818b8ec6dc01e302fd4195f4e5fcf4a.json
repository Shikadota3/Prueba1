{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INTEL\\\\Downloads\\\\project\\\\project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { initDB } from './utils/database';\nimport { initAuthDB, loginUser } from './utils/authDB';\nimport AuthLoginForm from './components/AuthLoginForm';\nimport AuthRegisterForm from './components/AuthRegisterForm';\nimport PatientList from './components/PatientList';\nimport PatientRecordForm from './components/PatientRecordForm';\nimport AppointmentManagement from './components/AppointmentManagement';\nimport EducationalMaterials from './components/EducationalMaterials';\nimport NavigationSidebar from './components/NavigationSidebar';\nimport DashboardStats from './components/DashboardStats';\nimport UserManagement from './components/UserManagement';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentView, setCurrentView] = useState('login');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userRole, setUserRole] = useState(null);\n  const [showRegister, setShowRegister] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  // Inicializar bases de datos y verificar autenticación\n  useEffect(() => {\n    const initializeApp = async () => {\n      try {\n        const db = await initDB();\n        await initAuthDB();\n\n        // Datos demo iniciales (solo si no existen)\n        const users = await db.query('SELECT COUNT(*) as count FROM users');\n        if (users.values[0].count === 0) {\n          await db.run(`INSERT INTO users (name, email, password, role, registered_at) \n             VALUES (?, ?, ?, ?, ?)`, ['Admin', 'admin@vidawasi.com', 'admin123', 'admin', new Date().toISOString()]);\n        }\n\n        // Verificar sesión activa\n        const activeUser = await db.query('SELECT * FROM users WHERE is_logged_in = 1 LIMIT 1');\n        if (activeUser.values.length > 0) {\n          setIsAuthenticated(true);\n          setUserRole(activeUser.values[0].role);\n          setCurrentUser(activeUser.values[0]);\n          setCurrentView('dashboard');\n        }\n      } catch (error) {\n        console.error('Error inicializando app:', error);\n      }\n    };\n    initializeApp();\n  }, []);\n  const handleLogin = async (email, password) => {\n    try {\n      const user = await loginUser(email, password);\n      if (user) {\n        setIsAuthenticated(true);\n        setUserRole(user.role);\n        setCurrentUser(user);\n        setCurrentView('dashboard');\n      } else {\n        alert('Credenciales incorrectas');\n      }\n    } catch (error) {\n      alert('Error al iniciar sesión');\n    }\n  };\n  const handleRegister = async userData => {\n    try {\n      const db = await initAuthDB();\n      const userExists = await db.query('SELECT 1 FROM users WHERE email = ?', [userData.email]);\n      if (userExists.values.length > 0) {\n        alert('El usuario ya existe');\n        return;\n      }\n      await db.run(`INSERT INTO users (name, email, password, role, registered_at) \n         VALUES (?, ?, ?, ?, ?)`, [userData.name, userData.email, userData.password, 'user', new Date().toISOString()]);\n\n      // Auto-login\n      handleLogin(userData.email, userData.password);\n    } catch (error) {\n      alert('Error al registrar usuario');\n    }\n  };\n  const handleLogout = async () => {\n    try {\n      const db = await initAuthDB();\n      await db.run('UPDATE users SET is_logged_in = 0 WHERE is_logged_in = 1');\n      setIsAuthenticated(false);\n      setUserRole(null);\n      setCurrentUser(null);\n      setCurrentView('login');\n    } catch (error) {\n      console.error('Error al cerrar sesión:', error);\n    }\n  };\n  const renderView = () => {\n    switch (currentView) {\n      case 'patients':\n        return /*#__PURE__*/_jsxDEV(PatientList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 16\n        }, this);\n      case 'records':\n        return /*#__PURE__*/_jsxDEV(PatientRecordForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 16\n        }, this);\n      case 'appointments':\n        return /*#__PURE__*/_jsxDEV(AppointmentManagement, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 16\n        }, this);\n      case 'education':\n        return /*#__PURE__*/_jsxDEV(EducationalMaterials, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 16\n        }, this);\n      case 'users':\n        return userRole === 'admin' ? /*#__PURE__*/_jsxDEV(UserManagement, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 39\n        }, this) : /*#__PURE__*/_jsxDEV(DashboardStats, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 60\n        }, this);\n      case 'dashboard':\n      default:\n        return /*#__PURE__*/_jsxDEV(DashboardStats, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100\",\n    children: !isAuthenticated ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen p-4\",\n      children: showRegister ? /*#__PURE__*/_jsxDEV(AuthRegisterForm, {\n        onRegister: handleRegister,\n        onShowLogin: () => setShowRegister(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(AuthLoginForm, {\n        onLogin: handleLogin,\n        onShowRegister: () => setShowRegister(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(NavigationSidebar, {\n        currentView: currentView,\n        setCurrentView: setCurrentView,\n        userRole: userRole,\n        onLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 p-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow p-6\",\n          children: renderView()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Pl7+45d1FSGgL7YyqCkNy6XqCy4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","initDB","initAuthDB","loginUser","AuthLoginForm","AuthRegisterForm","PatientList","PatientRecordForm","AppointmentManagement","EducationalMaterials","NavigationSidebar","DashboardStats","UserManagement","jsxDEV","_jsxDEV","App","_s","currentView","setCurrentView","isAuthenticated","setIsAuthenticated","userRole","setUserRole","showRegister","setShowRegister","currentUser","setCurrentUser","initializeApp","db","users","query","values","count","run","Date","toISOString","activeUser","length","role","error","console","handleLogin","email","password","user","alert","handleRegister","userData","userExists","name","handleLogout","renderView","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onRegister","onShowLogin","onLogin","onShowRegister","onLogout","_c","$RefreshReg$"],"sources":["C:/Users/INTEL/Downloads/project/project/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { initDB } from './utils/database';\nimport { initAuthDB, loginUser } from './utils/authDB';\nimport AuthLoginForm from './components/AuthLoginForm';\nimport AuthRegisterForm from './components/AuthRegisterForm';\nimport PatientList from './components/PatientList';\nimport PatientRecordForm from './components/PatientRecordForm';\nimport AppointmentManagement from './components/AppointmentManagement';\nimport EducationalMaterials from './components/EducationalMaterials';\nimport NavigationSidebar from './components/NavigationSidebar';\nimport DashboardStats from './components/DashboardStats';\nimport UserManagement from './components/UserManagement';\n\nconst App = () => {\n  const [currentView, setCurrentView] = useState('login');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userRole, setUserRole] = useState(null);\n  const [showRegister, setShowRegister] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  // Inicializar bases de datos y verificar autenticación\n  useEffect(() => {\n    const initializeApp = async () => {\n      try {\n        const db = await initDB();\n        await initAuthDB();\n\n        // Datos demo iniciales (solo si no existen)\n        const users = await db.query('SELECT COUNT(*) as count FROM users');\n        if (users.values[0].count === 0) {\n          await db.run(\n            `INSERT INTO users (name, email, password, role, registered_at) \n             VALUES (?, ?, ?, ?, ?)`,\n            ['Admin', 'admin@vidawasi.com', 'admin123', 'admin', new Date().toISOString()]\n          );\n        }\n\n        // Verificar sesión activa\n        const activeUser = await db.query('SELECT * FROM users WHERE is_logged_in = 1 LIMIT 1');\n        if (activeUser.values.length > 0) {\n          setIsAuthenticated(true);\n          setUserRole(activeUser.values[0].role);\n          setCurrentUser(activeUser.values[0]);\n          setCurrentView('dashboard');\n        }\n      } catch (error) {\n        console.error('Error inicializando app:', error);\n      }\n    };\n    initializeApp();\n  }, []);\n\n  const handleLogin = async (email, password) => {\n    try {\n      const user = await loginUser(email, password);\n      if (user) {\n        setIsAuthenticated(true);\n        setUserRole(user.role);\n        setCurrentUser(user);\n        setCurrentView('dashboard');\n      } else {\n        alert('Credenciales incorrectas');\n      }\n    } catch (error) {\n      alert('Error al iniciar sesión');\n    }\n  };\n\n  const handleRegister = async (userData) => {\n    try {\n      const db = await initAuthDB();\n      const userExists = await db.query(\n        'SELECT 1 FROM users WHERE email = ?', \n        [userData.email]\n      );\n\n      if (userExists.values.length > 0) {\n        alert('El usuario ya existe');\n        return;\n      }\n\n      await db.run(\n        `INSERT INTO users (name, email, password, role, registered_at) \n         VALUES (?, ?, ?, ?, ?)`,\n        [userData.name, userData.email, userData.password, 'user', new Date().toISOString()]\n      );\n\n      // Auto-login\n      handleLogin(userData.email, userData.password);\n    } catch (error) {\n      alert('Error al registrar usuario');\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      const db = await initAuthDB();\n      await db.run('UPDATE users SET is_logged_in = 0 WHERE is_logged_in = 1');\n      setIsAuthenticated(false);\n      setUserRole(null);\n      setCurrentUser(null);\n      setCurrentView('login');\n    } catch (error) {\n      console.error('Error al cerrar sesión:', error);\n    }\n  };\n\n  const renderView = () => {\n    switch(currentView) {\n      case 'patients': \n        return <PatientList />;\n      case 'records': \n        return <PatientRecordForm />;\n      case 'appointments': \n        return <AppointmentManagement />;\n      case 'education': \n        return <EducationalMaterials />;\n      case 'users': \n        return userRole === 'admin' ? <UserManagement /> : <DashboardStats />;\n      case 'dashboard': \n      default: \n        return <DashboardStats />;\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      {!isAuthenticated ? (\n        <div className=\"flex items-center justify-center min-h-screen p-4\">\n          {showRegister ? (\n            <AuthRegisterForm \n              onRegister={handleRegister} \n              onShowLogin={() => setShowRegister(false)} \n            />\n          ) : (\n            <AuthLoginForm \n              onLogin={handleLogin} \n              onShowRegister={() => setShowRegister(true)} \n            />\n          )}\n        </div>\n      ) : (\n        <div className=\"flex\">\n          <NavigationSidebar \n            currentView={currentView}\n            setCurrentView={setCurrentView}\n            userRole={userRole}\n            onLogout={handleLogout}\n          />\n          <div className=\"flex-1 p-6\">\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              {renderView()}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}