{"ast":null,"code":"import { initDB } from './database';\nexport const initAuthDB = async () => {\n  const db = await initDB();\n  await db.execute(`\n    CREATE TABLE IF NOT EXISTS users (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      name TEXT NOT NULL,\n      email TEXT UNIQUE NOT NULL,\n      password TEXT NOT NULL,\n      role TEXT DEFAULT 'user',\n      registered_at TEXT NOT NULL,\n      is_logged_in INTEGER DEFAULT 0\n    );\n  `);\n  return db;\n};\nexport const loginUser = async (email, password) => {\n  const db = await initAuthDB();\n  const result = await db.query('SELECT * FROM users WHERE email = ? AND password = ? LIMIT 1', [email, password]);\n  if (result.values.length > 0) {\n    // Cerrar otras sesiones\n    await db.run('UPDATE users SET is_logged_in = 0');\n    // Activar nueva sesión\n    await db.run('UPDATE users SET is_logged_in = 1 WHERE id = ?', [result.values[0].id]);\n    return result.values[0];\n  }\n  return null;\n};\nexport const getCurrentUser = async () => {\n  const db = await initAuthDB();\n  const result = await db.query('SELECT * FROM users WHERE is_logged_in = 1 LIMIT 1');\n  return result.values.length > 0 ? result.values[0] : null;\n};","map":{"version":3,"names":["initDB","initAuthDB","db","execute","loginUser","email","password","result","query","values","length","run","id","getCurrentUser"],"sources":["C:/RAUL/TRABAJOS/Aplicativo Vidawasi v3.0/project/src/utils/authDB.js"],"sourcesContent":["import { initDB } from './database';\r\n\r\nexport const initAuthDB = async () => {\r\n  const db = await initDB();\r\n  await db.execute(`\r\n    CREATE TABLE IF NOT EXISTS users (\r\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n      name TEXT NOT NULL,\r\n      email TEXT UNIQUE NOT NULL,\r\n      password TEXT NOT NULL,\r\n      role TEXT DEFAULT 'user',\r\n      registered_at TEXT NOT NULL,\r\n      is_logged_in INTEGER DEFAULT 0\r\n    );\r\n  `);\r\n  return db;\r\n};\r\n\r\nexport const loginUser = async (email, password) => {\r\n  const db = await initAuthDB();\r\n  const result = await db.query(\r\n    'SELECT * FROM users WHERE email = ? AND password = ? LIMIT 1',\r\n    [email, password]\r\n  );\r\n  \r\n  if (result.values.length > 0) {\r\n    // Cerrar otras sesiones\r\n    await db.run('UPDATE users SET is_logged_in = 0');\r\n    // Activar nueva sesión\r\n    await db.run('UPDATE users SET is_logged_in = 1 WHERE id = ?', [result.values[0].id]);\r\n    return result.values[0];\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const getCurrentUser = async () => {\r\n  const db = await initAuthDB();\r\n  const result = await db.query('SELECT * FROM users WHERE is_logged_in = 1 LIMIT 1');\r\n  return result.values.length > 0 ? result.values[0] : null;\r\n};"],"mappings":"AAAA,SAASA,MAAM,QAAQ,YAAY;AAEnC,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAMC,EAAE,GAAG,MAAMF,MAAM,CAAC,CAAC;EACzB,MAAME,EAAE,CAACC,OAAO,CAAC;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,CAAC;EACF,OAAOD,EAAE;AACX,CAAC;AAED,OAAO,MAAME,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAClD,MAAMJ,EAAE,GAAG,MAAMD,UAAU,CAAC,CAAC;EAC7B,MAAMM,MAAM,GAAG,MAAML,EAAE,CAACM,KAAK,CAC3B,8DAA8D,EAC9D,CAACH,KAAK,EAAEC,QAAQ,CAClB,CAAC;EAED,IAAIC,MAAM,CAACE,MAAM,CAACC,MAAM,GAAG,CAAC,EAAE;IAC5B;IACA,MAAMR,EAAE,CAACS,GAAG,CAAC,mCAAmC,CAAC;IACjD;IACA,MAAMT,EAAE,CAACS,GAAG,CAAC,gDAAgD,EAAE,CAACJ,MAAM,CAACE,MAAM,CAAC,CAAC,CAAC,CAACG,EAAE,CAAC,CAAC;IACrF,OAAOL,MAAM,CAACE,MAAM,CAAC,CAAC,CAAC;EACzB;EACA,OAAO,IAAI;AACb,CAAC;AAED,OAAO,MAAMI,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAMX,EAAE,GAAG,MAAMD,UAAU,CAAC,CAAC;EAC7B,MAAMM,MAAM,GAAG,MAAML,EAAE,CAACM,KAAK,CAAC,oDAAoD,CAAC;EACnF,OAAOD,MAAM,CAACE,MAAM,CAACC,MAAM,GAAG,CAAC,GAAGH,MAAM,CAACE,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI;AAC3D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}